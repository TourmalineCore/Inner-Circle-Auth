name: deploy UI to dev k8s

on:
  push:
    branches:
      - develop
      - master
      - ci/#863gxmf5j-prepare-to-prod

env:
  GITHUB_REGISTRY: ghcr.io

jobs:
  build-image:
    name: Build and push service image  
    runs-on: ubuntu-22.04
    steps:
      - name: checkout
        uses: actions/checkout@v1
      - name: Build and push image
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
          docker build -t $GITHUB_REGISTRY/tourmalinecore/inner-circle/auth-ui:latest -t $GITHUB_REGISTRY/tourmalinecore/inner-circle/auth-ui:${{ github.sha }} .
          docker push $GITHUB_REGISTRY/tourmalinecore/inner-circle/auth-ui:latest
          docker push $GITHUB_REGISTRY/tourmalinecore/inner-circle/auth-ui:${{ github.sha }}

  deploy-to-prod-k8s:
    needs: build-image
    name: Deploy service to k8s for production environment  
    if: github.ref_name == 'ci/#863gxmf5j-prepare-to-prod'
    runs-on: ubuntu-22.04
    environment: prod

    steps:
      - name: checkout
        uses: actions/checkout@v1
      - name: Deploy
        uses: WyriHaximus/github-action-helm3@v3
        with:
          exec: |
            RELEASE_NAME=auth-ui
            helm repo add bitnami https://charts.bitnami.com/bitnami
            helm upgrade --install --namespace prod-inner-circle --create-namespace --values ./ci/values-custom.yaml \
            --set "image.tag=${{ github.sha }}" \
            --set "ingress.enabled=true" \
            --set "ingress.hostname=${{ vars.HOST }}" \
            --set "extraConfigMapEnvVars.API_ROOT=${{ vars.API_ROOT }}" \
            --set "extraConfigMapEnvVars.ENV_KEY=${{ vars.ENV_KEY }}" \
            --set "resources.limits.cpu=${{ vars.APP_CPU_LIMIT }}" \
            --set "resources.limits.memory=${{ vars.APP_MEMORY_LIMIT }}" \
            --set "resources.requests.cpu=${{ vars.APP_CPU_REQUESTS }}" \
            --set "resources.requests.memory=${{ vars.APP_MEMORY_REQUESTS }}" \
            "${RELEASE_NAME}" \
            bitnami/nginx
          kubeconfig: "${{ secrets.DEV_KUBECONFIG }}"